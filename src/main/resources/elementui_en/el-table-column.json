{
  "name": "el-table-column",
  "attributes": [
    {
      "name": "type",
      "desc": "type of the column. If set to `selection`, the column will display checkbox. If set to `index`, the column will display index of the row (staring from 1). If set to `expand`, the column will display expand icon.",
      "type": "string",
      "optionValue": "selection/index/expand",
      "options": [
        "selection",
        "index",
        "expand"
      ],
      "defaultValue": "—"
    },
    {
      "name": "index",
      "desc": "customize indices for each row, works on columns with `type=index`",
      "type": "number, Function(index)",
      "optionValue": "-",
      "options": [],
      "defaultValue": "-"
    },
    {
      "name": "label",
      "desc": "column label",
      "type": "string",
      "optionValue": "—",
      "options": [],
      "defaultValue": "—"
    },
    {
      "name": "column-key",
      "desc": "column's key. If you need to use the filter-change event, you need this attribute to identify which column is being filtered",
      "type": "string",
      "optionValue": "string",
      "options": [],
      "defaultValue": "—"
    },
    {
      "name": "prop",
      "desc": "field name. You can also use its alias: `property`",
      "type": "string",
      "optionValue": "—",
      "options": [],
      "defaultValue": "—"
    },
    {
      "name": "width",
      "desc": "column width",
      "type": "string",
      "optionValue": "—",
      "options": [],
      "defaultValue": "—"
    },
    {
      "name": "min-width",
      "desc": "column minimum width. Columns with `width` has a fixed width, while columns with `min-width` has a width that is distributed in proportion",
      "type": "string",
      "optionValue": "—",
      "options": [],
      "defaultValue": "—"
    },
    {
      "name": "fixed",
      "desc": "whether column is fixed at left/right. Will be fixed at left if `true`",
      "type": "string/boolean",
      "optionValue": "true/left/right",
      "options": [
        "true",
        "left",
        "right"
      ],
      "defaultValue": "—"
    },
    {
      "name": "render-header",
      "desc": "render function for table header of this column",
      "type": "Function(h, { column, $index })",
      "optionValue": "—",
      "options": [],
      "defaultValue": "—"
    },
    {
      "name": "sortable",
      "desc": "whether column can be sorted. Remote sorting can be done by setting this attribute to 'custom' and listening to the `sort-change` event of Table",
      "type": "boolean, string",
      "optionValue": "true, false, custom",
      "options": [],
      "defaultValue": "false"
    },
    {
      "name": "sort-method",
      "desc": "sorting method, works when `sortable` is `true`. Should return a number, just like Array.sort",
      "type": "Function(a, b)",
      "optionValue": "—",
      "options": [],
      "defaultValue": "—"
    },
    {
      "name": "sort-by",
      "desc": "specify which property to sort by, works when `sortable` is `true` and `sort-method` is `undefined`. If set to an Array, the column will sequentially sort by the next property if the previous one is equal",
      "type": "Function(row, index)/String/Array",
      "optionValue": "—",
      "options": [],
      "defaultValue": "—"
    },
    {
      "name": "sort-orders",
      "desc": "the order of the sorting strategies used when sorting the data, works when `sortable` is `true`. Accepts an array, as the user clicks on the header, the column is sorted in order of the elements in the array",
      "type": "array",
      "optionValue": "the elements in the array need to be one of the following: `ascending`, `descending` and `null` (restores to the original order)",
      "options": [],
      "defaultValue": "['ascending', 'descending', null]"
    },
    {
      "name": "resizable",
      "desc": "whether column width can be resized, works when `border` of `el-table` is `true`",
      "type": "boolean",
      "optionValue": "—",
      "options": [],
      "defaultValue": "false"
    },
    {
      "name": "formatter",
      "desc": "function that formats cell content",
      "type": "Function(row, column, cellValue, index)",
      "optionValue": "—",
      "options": [],
      "defaultValue": "—"
    },
    {
      "name": "show-overflow-tooltip",
      "desc": "whether to hide extra content and show them in a tooltip when hovering on the cell",
      "type": "boolean",
      "optionValue": "—",
      "options": [],
      "defaultValue": "false"
    },
    {
      "name": "align",
      "desc": "alignment",
      "type": "string",
      "optionValue": "left/center/right",
      "options": [
        "left",
        "center",
        "right"
      ],
      "defaultValue": "left"
    },
    {
      "name": "header-align",
      "desc": "alignment of the table header. If omitted, the value of the above `align` attribute will be applied",
      "type": "String",
      "optionValue": "left/center/right",
      "options": [
        "left",
        "center",
        "right"
      ],
      "defaultValue": "—"
    },
    {
      "name": "class-name",
      "desc": "class name of cells in the column",
      "type": "string",
      "optionValue": "—",
      "options": [],
      "defaultValue": "—"
    },
    {
      "name": "label-class-name",
      "desc": "class name of the label of this column",
      "type": "string",
      "optionValue": "—",
      "options": [],
      "defaultValue": "—"
    },
    {
      "name": "selectable",
      "desc": "function that determines if a certain row can be selected, works when `type` is 'selection'",
      "type": "Function(row, index)",
      "optionValue": "—",
      "options": [],
      "defaultValue": "—"
    },
    {
      "name": "reserve-selection",
      "desc": "whether to reserve selection after data refreshing, works when `type` is 'selection'. Note that `row-key` is required for this to work",
      "type": "boolean",
      "optionValue": "—",
      "options": [],
      "defaultValue": "false"
    },
    {
      "name": "filters",
      "desc": "an array of data filtering options. For each element in this array, `text` and `value` are required",
      "type": "Array[{ text, value }]",
      "optionValue": "—",
      "options": [],
      "defaultValue": "—"
    },
    {
      "name": "filter-placement",
      "desc": "placement for the filter dropdown",
      "type": "String",
      "optionValue": "same as Tooltip's `placement`",
      "options": [],
      "defaultValue": "—"
    },
    {
      "name": "filter-multiple",
      "desc": "whether data filtering supports multiple options",
      "type": "Boolean",
      "optionValue": "—",
      "options": [],
      "defaultValue": "true"
    },
    {
      "name": "filter-method",
      "desc": "data filtering method. If `filter-multiple` is on, this method will be called multiple times for each row, and a row will display if one of the calls returns `true`",
      "type": "Function(value, row, column)",
      "optionValue": "—",
      "options": [],
      "defaultValue": "—"
    },
    {
      "name": "filtered-value",
      "desc": "filter value for selected data, might be useful when table header is rendered with `render-header`",
      "type": "Array",
      "optionValue": "—",
      "options": [],
      "defaultValue": "—"
    }
  ],
  "props": [],
  "options": [],
  "shortcuts": [],
  "slots": [
    {
      "name": "—",
      "desc": "Custom content for table columns. The scope parameter is { row, column, $index }"
    },
    {
      "name": "header",
      "desc": "Custom content for table header. The scope parameter is { column, $index }"
    }
  ],
  "events": [],
  "methods": []
}