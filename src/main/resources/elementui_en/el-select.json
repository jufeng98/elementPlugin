{
  "name": "el-select",
  "attributes": [
    {
      "name": "value",
      "desc": "binding value",
      "type": "boolean / string / number",
      "optionValue": "—",
      "options": [],
      "defaultValue": "—"
    },
    {
      "name": "v-model",
      "desc": "binding value",
      "type": "boolean / string / number",
      "optionValue": "—",
      "options": [],
      "defaultValue": "—"
    },
    {
      "name": "multiple",
      "desc": "whether multiple-select is activated",
      "type": "boolean",
      "optionValue": "—",
      "options": [],
      "defaultValue": "false"
    },
    {
      "name": "disabled",
      "desc": "whether Select is disabled",
      "type": "boolean",
      "optionValue": "—",
      "options": [],
      "defaultValue": "false"
    },
    {
      "name": "value-key",
      "desc": "unique identity key name for value, required when value is an object",
      "type": "string",
      "optionValue": "—",
      "options": [],
      "defaultValue": "value"
    },
    {
      "name": "size",
      "desc": "size of Input",
      "type": "string",
      "optionValue": "large/small/mini",
      "options": [
        "large",
        "small",
        "mini"
      ],
      "defaultValue": "—"
    },
    {
      "name": "clearable",
      "desc": "whether select can be cleared",
      "type": "boolean",
      "optionValue": "—",
      "options": [],
      "defaultValue": "false"
    },
    {
      "name": "collapse-tags",
      "desc": "whether to collapse tags to a text when multiple selecting",
      "type": "boolean",
      "optionValue": "—",
      "options": [],
      "defaultValue": "false"
    },
    {
      "name": "multiple-limit",
      "desc": "maximum number of options user can select when `multiple` is `true`. No limit when set to 0",
      "type": "number",
      "optionValue": "—",
      "options": [],
      "defaultValue": "0"
    },
    {
      "name": "name",
      "desc": "the name attribute of select input",
      "type": "string",
      "optionValue": "—",
      "options": [],
      "defaultValue": "—"
    },
    {
      "name": "autocomplete",
      "desc": "the autocomplete attribute of select input",
      "type": "string",
      "optionValue": "—",
      "options": [],
      "defaultValue": "off"
    },
    {
      "name": "auto-complete",
      "desc": "@DEPRECATED in next major version",
      "type": "string",
      "optionValue": "—",
      "options": [],
      "defaultValue": "off"
    },
    {
      "name": "placeholder",
      "desc": "placeholder",
      "type": "string",
      "optionValue": "—",
      "options": [],
      "defaultValue": "Select"
    },
    {
      "name": "filterable",
      "desc": "whether Select is filterable",
      "type": "boolean",
      "optionValue": "—",
      "options": [],
      "defaultValue": "false"
    },
    {
      "name": "allow-create",
      "desc": "whether creating new items is allowed. To use this, `filterable` must be true",
      "type": "boolean",
      "optionValue": "—",
      "options": [],
      "defaultValue": "false"
    },
    {
      "name": "filter-method",
      "desc": "custom filter method",
      "type": "function",
      "optionValue": "—",
      "options": [],
      "defaultValue": "—"
    },
    {
      "name": "remote",
      "desc": "whether options are loaded from server",
      "type": "boolean",
      "optionValue": "—",
      "options": [],
      "defaultValue": "false"
    },
    {
      "name": "remote-method",
      "desc": "custom remote search method",
      "type": "function",
      "optionValue": "—",
      "options": [],
      "defaultValue": "—"
    },
    {
      "name": "loading",
      "desc": "whether Select is loading data from server",
      "type": "boolean",
      "optionValue": "—",
      "options": [],
      "defaultValue": "false"
    },
    {
      "name": "loading-text",
      "desc": "displayed text while loading data from server",
      "type": "string",
      "optionValue": "—",
      "options": [],
      "defaultValue": "Loading"
    },
    {
      "name": "no-match-text",
      "desc": "displayed text when no data matches the filtering query, you can also use slot `empty`",
      "type": "string",
      "optionValue": "—",
      "options": [],
      "defaultValue": "No matching data"
    },
    {
      "name": "no-data-text",
      "desc": "displayed text when there is no options, you can also use slot `empty`",
      "type": "string",
      "optionValue": "—",
      "options": [],
      "defaultValue": "No data"
    },
    {
      "name": "popper-class",
      "desc": "custom class name for Select's dropdown",
      "type": "string",
      "optionValue": "—",
      "options": [],
      "defaultValue": "—"
    },
    {
      "name": "reserve-keyword",
      "desc": "when `multiple` and `filter` is true, whether to reserve current keyword after selecting an option",
      "type": "boolean",
      "optionValue": "—",
      "options": [],
      "defaultValue": "false"
    },
    {
      "name": "default-first-option",
      "desc": "select first matching option on enter key. Use with `filterable` or `remote`",
      "type": "boolean",
      "optionValue": "-",
      "options": [],
      "defaultValue": "false"
    },
    {
      "name": "popper-append-to-body",
      "desc": "whether to append the popper menu to body. If the positioning of the popper is wrong, you can try to set this prop to false",
      "type": "boolean",
      "optionValue": "-",
      "options": [],
      "defaultValue": "true"
    },
    {
      "name": "automatic-dropdown",
      "desc": "for non-filterable Select, this prop decides if the option menu pops up when the input is focused",
      "type": "boolean",
      "optionValue": "-",
      "options": [],
      "defaultValue": "false"
    }
  ],
  "props": [],
  "options": [],
  "shortcuts": [],
  "slots": [
    {
      "name": "—",
      "desc": "Option component list"
    },
    {
      "name": "prefix",
      "desc": "content as Select prefix"
    },
    {
      "name": "empty",
      "desc": "content when there is no options"
    }
  ],
  "events": [
    {
      "name": "@change",
      "desc": "triggers when the selected value changes",
      "param": "current selected value"
    },
    {
      "name": "@visible-change",
      "desc": "triggers when the dropdown appears/disappears",
      "param": "true when it appears, and false otherwise"
    },
    {
      "name": "@remove-tag",
      "desc": "triggers when a tag is removed in multiple mode",
      "param": "removed tag value"
    },
    {
      "name": "@clear",
      "desc": "triggers when the clear icon is clicked in a clearable Select",
      "param": "—"
    },
    {
      "name": "@blur",
      "desc": "triggers when Input blurs",
      "param": "(event: Event)"
    },
    {
      "name": "@focus",
      "desc": "triggers when Input focuses",
      "param": "(event: Event)"
    }
  ],
  "methods": [
    {
      "name": "focus",
      "desc": "focus the Input component",
      "param": "-"
    },
    {
      "name": "blur",
      "desc": "blur the Input component, and hide the dropdown",
      "param": "-"
    }
  ]
}