{
  "name": "el-table-column",
  "attributes": [
    {
      "name": "type",
      "desc": "type of the column. If set to selection, the column will display checkbox. If set to index, the column will display index of the row (staring from 1). If set to expand, the column will display expand icon",
      "type": "enum",
      "optionValue": "default | selection | index | expand",
      "options": [
        "default",
        "selection",
        "index",
        "expand"
      ],
      "defaultValue": "default"
    },
    {
      "name": "index",
      "desc": "customize indices for each row, works on columns with type=index",
      "type": "number / Function",
      "optionValue": "(index: number) => number",
      "options": [],
      "defaultValue": "—"
    },
    {
      "name": "label",
      "desc": "column label",
      "type": "string",
      "optionValue": "",
      "options": [],
      "defaultValue": "—"
    },
    {
      "name": "column-key",
      "desc": "column's key. If you need to use the filter-change event, you need this attribute to identify which column is being filtered",
      "type": "string",
      "optionValue": "",
      "options": [],
      "defaultValue": "—"
    },
    {
      "name": "prop",
      "desc": "field name. You can also use its alias: property",
      "type": "string",
      "optionValue": "",
      "options": [],
      "defaultValue": "—"
    },
    {
      "name": "width",
      "desc": "column width",
      "type": "string / number",
      "optionValue": "",
      "options": [],
      "defaultValue": ""
    },
    {
      "name": "min-width",
      "desc": "column minimum width. Columns with width has a fixed width, while columns with min-width has a width that is distributed in proportion",
      "type": "string / number",
      "optionValue": "",
      "options": [],
      "defaultValue": ""
    },
    {
      "name": "fixed",
      "desc": "whether column is fixed at left / right. Will be fixed at left if true",
      "type": "enum",
      "optionValue": "left | right",
      "options": [
        "left",
        "right"
      ],
      "defaultValue": "false"
    },
    {
      "name": "render-header",
      "desc": "render function for table header of this column",
      "type": "Function",
      "optionValue": "(data: { column: any, $index: number }) => void",
      "options": [],
      "defaultValue": "—"
    },
    {
      "name": "sortable",
      "desc": "whether column can be sorted. Remote sorting can be done by setting this attribute to 'custom' and listening to the sort-change event of Table",
      "type": "boolean / string",
      "optionValue": "",
      "options": [],
      "defaultValue": "false"
    },
    {
      "name": "sort-method",
      "desc": "sorting method, works when sortable is true. Should return a number, just like Array.sort",
      "type": "Function",
      "optionValue": "<T = any>(a: T, b: T) => number",
      "options": [],
      "defaultValue": "—"
    },
    {
      "name": "sort-by",
      "desc": "specify which property to sort by, works when sortable is true and sort-method is undefined. If set to an Array, the column will sequentially sort by the next property if the previous one is equal",
      "type": "Function",
      "optionValue": "(row: any, index: number) => string",
      "options": [],
      "defaultValue": "—"
    },
    {
      "name": "sort-orders",
      "desc": "the order of the sorting strategies used when sorting the data, works when sortable is true. Accepts an array, as the user clicks on the header, the column is sorted in order of the elements in the array",
      "type": "object",
      "optionValue": "(ascending | descending | null)[]",
      "options": [],
      "defaultValue": "[ascending, descending, null]"
    },
    {
      "name": "resizable",
      "desc": "whether column width can be resized, works when border of el-table is true",
      "type": "boolean",
      "optionValue": "",
      "options": [],
      "defaultValue": "true"
    },
    {
      "name": "formatter",
      "desc": "function that formats cell content",
      "type": "function",
      "optionValue": "(row: any, column: any, cellValue: any, index: number) => VNode | string",
      "options": [],
      "defaultValue": "—"
    },
    {
      "name": "show-overflow-tooltip",
      "desc": "whether to hide extra content and show them in a tooltip when hovering on the cell",
      "type": "boolean / [",
      "optionValue": "object",
      "options": [],
      "defaultValue": "undefined"
    },
    {
      "name": "align",
      "desc": "alignment",
      "type": "enum",
      "optionValue": "left | center | right",
      "options": [
        "left",
        "center",
        "right"
      ],
      "defaultValue": "left"
    },
    {
      "name": "header-align",
      "desc": "alignment of the table header. If omitted, the value of the above align attribute will be applied",
      "type": "enum",
      "optionValue": "left | center | right",
      "options": [
        "left",
        "center",
        "right"
      ],
      "defaultValue": "left"
    },
    {
      "name": "class-name",
      "desc": "class name of cells in the column",
      "type": "string",
      "optionValue": "",
      "options": [],
      "defaultValue": "—"
    },
    {
      "name": "label-class-name",
      "desc": "class name of the label of this column",
      "type": "string",
      "optionValue": "",
      "options": [],
      "defaultValue": "—"
    },
    {
      "name": "selectable",
      "desc": "function that determines if a certain row can be selected, works when type is 'selection'",
      "type": "Function",
      "optionValue": "(row: any, index: number) => boolean",
      "options": [],
      "defaultValue": "—"
    },
    {
      "name": "reserve-selection",
      "desc": "whether to reserve selection after data refreshing, works when type is 'selection'. Note that row-key is required for this to work",
      "type": "boolean",
      "optionValue": "",
      "options": [],
      "defaultValue": "false"
    },
    {
      "name": "filters",
      "desc": "an array of data filtering options. For each element in this array, text and value are required",
      "type": "array",
      "optionValue": "Array<{text: string, value: string}>",
      "options": [],
      "defaultValue": "—"
    },
    {
      "name": "filter-placement",
      "desc": "placement for the filter dropdown",
      "type": "enum",
      "optionValue": "top | top-start | top-end | bottom | bottom-start | bottom-end | left | left-start | left-end | right | right-start | right-end",
      "options": [
        "top",
        "top-start",
        "top-end",
        "bottom",
        "bottom-start",
        "bottom-end",
        "left",
        "left-start",
        "left-end",
        "right",
        "right-start",
        "right-end"
      ],
      "defaultValue": "—"
    },
    {
      "name": "filter-class-name",
      "desc": "className for the filter dropdown(2.5.0)",
      "type": "string",
      "optionValue": "",
      "options": [],
      "defaultValue": "—"
    },
    {
      "name": "filter-multiple",
      "desc": "whether data filtering supports multiple options",
      "type": "boolean",
      "optionValue": "",
      "options": [],
      "defaultValue": "true"
    },
    {
      "name": "filter-method",
      "desc": "data filtering method. If filter-multiple is on, this method will be called multiple times for each row, and a row will display if one of the calls returns true",
      "type": "function",
      "optionValue": "(value: any, row: any, column: any) => void",
      "options": [],
      "defaultValue": "—"
    },
    {
      "name": "filtered-value",
      "desc": "filter value for selected data, might be useful when table header is rendered with render-header",
      "type": "object",
      "optionValue": "string[]",
      "options": [],
      "defaultValue": "—"
    },
    {
      "name": "tooltip-formatter",
      "desc": "customize tooltip content when using show-overflow-tooltip(2.9.4)",
      "type": "Function",
      "optionValue": "(data: { row: any, column: any, cellValue: any }) => VNode | string",
      "options": [],
      "defaultValue": "—"
    }
  ],
  "props": [],
  "options": [],
  "shortcuts": [],
  "slots": [
    {
      "name": "default",
      "desc": "Custom content for table columns"
    },
    {
      "name": "header",
      "desc": "Custom content for table header"
    },
    {
      "name": "filter-icon ^(2.7.8)",
      "desc": "Custom content for filter icon"
    }
  ],
  "events": [],
  "methods": []
}