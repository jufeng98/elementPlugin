{
  "name": "el-dropdown",
  "attributes": [
    {
      "name": "type",
      "desc": "menu button type, refer to Button Component, only works when split-button is true",
      "type": "enum",
      "optionValue": " | default | primary | success | warning | info | danger | text (deprecated)",
      "options": [
        "default",
        "primary",
        "success",
        "warning",
        "info",
        "danger",
        "text (deprecated)"
      ],
      "defaultValue": ""
    },
    {
      "name": "size",
      "desc": "menu size, also works on the split button",
      "type": "enum",
      "optionValue": " | large | default | small",
      "options": [
        "large",
        "default",
        "small"
      ],
      "defaultValue": ""
    },
    {
      "name": "button-props",
      "desc": "props for the button component, refer to [Button Attributes](./button.html#button-attributes)",
      "type": "object",
      "optionValue": "",
      "options": [],
      "defaultValue": "â€”"
    },
    {
      "name": "max-height",
      "desc": "the max height of menu",
      "type": "string / number",
      "optionValue": "",
      "options": [],
      "defaultValue": ""
    },
    {
      "name": "split-button",
      "desc": "whether a button group is displayed",
      "type": "boolean",
      "optionValue": "",
      "options": [],
      "defaultValue": "false"
    },
    {
      "name": "disabled",
      "desc": "whether to disable",
      "type": "boolean",
      "optionValue": "",
      "options": [],
      "defaultValue": "false"
    },
    {
      "name": "placement",
      "desc": "placement of pop menu",
      "type": "enum",
      "optionValue": "top | top-start | top-end | bottom | bottom-start | bottom-end",
      "options": [
        "top",
        "top-start",
        "top-end",
        "bottom",
        "bottom-start",
        "bottom-end"
      ],
      "defaultValue": "bottom"
    },
    {
      "name": "trigger",
      "desc": "how to trigger",
      "type": "enum",
      "optionValue": "hover | click | contextmenu",
      "options": [
        "hover",
        "click",
        "contextmenu"
      ],
      "defaultValue": "hover"
    },
    {
      "name": "triggerKeys",
      "desc": "specify which keys on the keyboard can trigger when pressed(2.9.1)",
      "type": "array",
      "optionValue": "string[]",
      "options": [],
      "defaultValue": "[Enter, Space, ArrowDown, NumpadEnter]"
    },
    {
      "name": "hide-on-click",
      "desc": "whether to hide menu after clicking menu-item",
      "type": "boolean",
      "optionValue": "",
      "options": [],
      "defaultValue": "true"
    },
    {
      "name": "show-timeout",
      "desc": "delay time before show a dropdown (only works when trigger is hover)",
      "type": "number",
      "optionValue": "",
      "options": [],
      "defaultValue": "150"
    },
    {
      "name": "hide-timeout",
      "desc": "delay time before hide a dropdown (only works when trigger is hover)",
      "type": "number",
      "optionValue": "",
      "options": [],
      "defaultValue": "150"
    },
    {
      "name": "role",
      "desc": "the ARIA role attribute for the dropdown menu. Depending on the use case, you may want to change this to 'navigation'",
      "type": "enum",
      "optionValue": "dialog | grid | group | listbox | menu | navigation | tooltip | tree",
      "options": [
        "dialog",
        "grid",
        "group",
        "listbox",
        "menu",
        "navigation",
        "tooltip",
        "tree"
      ],
      "defaultValue": "menu"
    },
    {
      "name": "tabindex",
      "desc": "<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex\">tabindex</a> of Dropdown</p>",
      "type": "number / string",
      "optionValue": "",
      "options": [],
      "defaultValue": "0"
    },
    {
      "name": "popper-class",
      "desc": "custom class name for Dropdown's dropdown",
      "type": "string",
      "optionValue": "",
      "options": [],
      "defaultValue": ""
    },
    {
      "name": "popper-options",
      "desc": "<p><a href=\"https://popper.js.org/docs/v2/\">popper.js</a> parameters</p>",
      "type": "object",
      "optionValue": "",
      "options": [],
      "defaultValue": "{modifiers: [{name: computeStyles,options: {gpuAcceleration: false}}]}"
    },
    {
      "name": "teleported",
      "desc": "whether the dropdown popup is teleported to the body(2.2.20)",
      "type": "boolean",
      "optionValue": "",
      "options": [],
      "defaultValue": "true"
    },
    {
      "name": "persistent",
      "desc": "when dropdown inactive and persistent is false , dropdown menu will be destroyed(2.9.5)",
      "type": "boolean",
      "optionValue": "",
      "options": [],
      "defaultValue": "true"
    }
  ],
  "props": [],
  "options": [],
  "shortcuts": [],
  "slots": [
    {
      "name": "default",
      "desc": "content of Dropdown. Notice: Must be a valid html dom element (ex. `<span>, <button> etc.`) or `el-component`, to attach the trigger listener"
    },
    {
      "name": "dropdown",
      "desc": "content of the Dropdown Menu, usually a `<el-dropdown-menu>` element"
    }
  ],
  "events": [
    {
      "name": "@click",
      "desc": "if `split-button` is `true`, triggers when left button is clicked",
      "param": "Function(e: MouseEvent) => void"
    },
    {
      "name": "@command",
      "desc": "triggers when a dropdown item is clicked, the parameters is the command dispatched from the dropdown item",
      "param": "Function(...args: any[) => void"
    },
    {
      "name": "@visible-change",
      "desc": "triggers when the dropdown appears/disappears, the param is true when it appears, and false otherwise",
      "param": "Function(val: boolean) => void"
    }
  ],
  "methods": [
    {
      "name": "handleOpen",
      "desc": "open the dropdown menu",
      "param": "Function() => void"
    },
    {
      "name": "handleClose",
      "desc": "close the dropdown menu",
      "param": "Function() => void"
    }
  ]
}